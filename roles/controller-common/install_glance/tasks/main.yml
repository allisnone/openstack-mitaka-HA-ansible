---
  - name: Download the OpenStack Image API resource to Pacemaker
    file: path=/usr/lib/ocf/resource.d/openstack state=directory mode=0755
  - get_url: url=https://git.openstack.org/cgit/openstack/openstack-resource-agents/plain/ocf/glance-api dest=/usr/lib/ocf/resource.d/openstack/glance-api mode=0755
  - name: Add p_glance-api resource
    shell: crm configure primitive p_glance-api ocf:openstack:glance-api params config="/etc/glance/glance-api.conf" os_password="{{ admin_user_pass }}" os_username="admin" os_tenant_name="admin" os_auth_url="http://{{ mitakaha_vip_fqdn }}:5000/v2.0/" op monitor interval="30s" timeout="30s"
    ignore_errors: yes

  - name: Create database for glance
    mysql_db: login_user=root login_password={{ mysql_root_password  }} name=glance state=present
  - name: Create glance user and grant privileges to glance database.
    mysql_user: login_user=root login_password={{ mysql_root_password  }} name=glance password={{ glance_dbpass }} priv=*.*:ALL state=present host={{ item }}
    with_items:
     - "{{ controller01 }}"
     - "{{ controller02 }}"
     - "{{ controller03 }}"
     - "{{ mitakaha_vip_fqdn }}"
     - 127.0.0.1
     - localhost
     - ::1
  - name: Install glance and python-glanceclient on controller node
    apt: name={{ item }} state=present force=yes
    with_items:
     - glance
  - name: update bind_host in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=DEFAULT
              option=bind_host
              value={{ mitakaha_vip }}
  - name: update registry_host in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=DEFAULT
              option=registry_host
              value={{ mitakaha_vip }}
  - name: update notifier_strategy in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=DEFAULT
              option=notifier_strategy
              value=rabbit
  - name: update rabbit_host in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=DEFAULT
              option=rabbit_host
              value={{ controller01 }}:5672,{{ controller02 }}:5672,{{ controller03 }}:5672
  - name: update rabbit_retry_interval in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=oslo_messaging_rabbit
              option=rabbit_retry_interval
              value=1
  - name: update rabbit_retry_backoff in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=oslo_messaging_rabbit
              option=rabbit_retry_backoff
              value=2
  - name: update rabbit_max_retries in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=oslo_messaging_rabbit
              option=rabbit_max_retries
              value=0
  - name: update rabbit_durable_queues in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=oslo_messaging_rabbit
              option=rabbit_durable_queues
              value=true
  - name: update rabbit_ha_queues in /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=oslo_messaging_rabbit
              option=rabbit_ha_queues
              value=true

  - name: update /etc/glance/glance-api.conf
    lineinfile: dest=/etc/glance/glance-api.conf regexp='^sqlite_db' state=absent
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=database
              option=connection
              value=mysql+pymysql://glance:{{ glance_dbpass }}@{{ mitakaha_vip_fqdn }}/glance
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              state=absent
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              state=present
              backup=yes

  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_uri
              value=http://{{ controller01 }}:5000
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller01_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_url
              value=http://{{ controller01 }}:35357
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller01_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=memcached_servers
              value={{ controller01 }}:11211
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller01_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_uri
              value=http://{{ controller02 }}:5000
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller02_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_url
              value=http://{{ controller02 }}:35357
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller02_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=memcached_servers
              value={{ controller02 }}:11211
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller02_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_uri
              value=http://{{ controller03 }}:5000
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller03_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_url
              value=http://{{ controller03 }}:35357
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller03_eth0 }}"
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=memcached_servers
              value={{ controller03 }}:11211
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller03_eth0 }}"


  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=auth_type
              value=password
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=project_domain_name
              value=default
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=user_domain_name
              value=default
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=project_name
              value=service
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=username
              value=glance
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=keystone_authtoken
              option=password
              value={{ glance_user_pass }}
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=paste_deploy
              option=flavor
              value=keystone
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=glance_store
              option=stores
              value=file,http
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=glance_store
              option=default_store
              value=file
              backup=yes
  - name: update /etc/glance/glance-api.conf
    ini_file: dest=/etc/glance/glance-api.conf
              section=glance_store
              option=filesystem_store_datadir
              value=/var/lib/glance/images/
              backup=yes

  - name: update /etc/glance/glance-registry.conf
    lineinfile: dest=/etc/glance/glance-registry.conf regexp='^sqlite_db' state=absent
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=database
              option=connection
              value=mysql+pymysql://glance:{{ glance_dbpass }}@{{ mitakaha_vip_fqdn }}/glance
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              state=absent
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              state=present
              backup=yes

  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_uri
              value=http://{{ controller01 }}:5000
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller01_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_url
              value=http://{{ controller01 }}:35357
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller01_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=memcached_servers
              value={{ controller01 }}:11211
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller01_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_uri
              value=http://{{ controller02 }}:5000
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller02_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_url
              value=http://{{ controller02 }}:35357
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller02_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=memcached_servers
              value={{ controller02 }}:11211
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller02_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_uri
              value=http://{{ controller03 }}:5000
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller03_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_url
              value=http://{{ controller03 }}:35357
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller03_eth0 }}"
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=memcached_servers
              value={{ controller03 }}:11211
              backup=yes
    when: ansible_eth0.ipv4.address == "{{ controller03_eth0 }}"

  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=auth_type
              value=password
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=project_domain_name
              value=default
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=user_domain_name
              value=default
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=project_name
              value=service
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=username
              value=glance
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=keystone_authtoken
              option=password
              value={{ glance_user_pass }}
              backup=yes
  - name: update /etc/glance/glance-registry.conf
    ini_file: dest=/etc/glance/glance-registry.conf
              section=paste_deploy
              option=flavor
              value=keystone
              backup=yes

  - name: Populate the Image service database in controller node
    shell: su -s /bin/sh -c "glance-manage db_sync" glance
  - name: Restart Glance-Registry
    service: name=glance-registry state=restarted
  - name: Restart Glance-Api
    service: name=glance-api state=restarted
  - name: Remove /var/lib/glance/glance.sqlite
    file: path=/var/lib/glance/glance.sqlite state=absent
  - name: Upload image
    template: src=image.sh.j2 dest=/var/tmp/image.sh
  - name: create image
    shell: bash /var/tmp/image.sh chdir=/var/tmp/
    environment:
      OS_PROJECT_DOMAIN_NAME: default
      OS_USER_DOMAIN_NAME: default
      OS_PROJECT_NAME: admin
      OS_USERNAME: admin
      OS_PASSWORD: "{{ admin_user_pass }}"
      OS_AUTH_URL: http://{{ mitakaha_vip_fqdn }}:35357/v3
      OS_IDENTITY_API_VERSION: 3
      OS_IMAGE_API_VERSION: 2
